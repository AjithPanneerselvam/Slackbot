{
  "name": "Slackbot",
  "tagline": "Slack bot to run python script (Under development).",
  "body": "### Slackbot\r\nA bot to run and display the output of your python script right on slack itself, which is posted in the general channel of your slack team. \r\n\r\n## API used \r\n* SLACK API\r\n* HackerEarth \r\n\r\n## Requirements\r\n* Python 2.7\r\n\r\n## Installation\r\n1. Clone this repository in your desired directory\r\n2. Create a slack bot [here](https://api.slack.com/bot-users)\r\n3. Export your **Slack bot token** using the command prompt or terminal with the name **SLACK_BOT_TOKEN**\r\n4. Run the python script **slackbot.py**.(Now your bot is made online and you are good to go)\r\n\r\n## How to trigger slack bot\r\nTo trigger your bot to fetch you the output of the python script posted in the general channel, do as follows: \r\n\r\n`@botname: file_name.py`\r\n\r\n\r\n## Source code\r\n```python\r\nimport os\r\nimport time \r\nimport requests\r\nimport json\r\nfrom slackclient import SlackClient \r\n\r\n\r\nslack_client = SlackClient(os.environ.get('SLACK_BOT_TOKEN'))\r\nBOT_ID = str(os.environ.get('BOT_ID'))\r\nRUN_URL = u'http://api.hackerearth.com/code/run/'\r\nCLIENT_SECRET = 'e9b31d9bff43f1a393ec3519515a9cd0b4bc7438'\r\n\r\n\r\ndef handle_command(message, channel):\r\n\t\r\n\tif BOT_ID in message:\r\n\t\tcommand = message.split()\r\n\t\tfile_name= str(command[1])\r\n\t\tdirectory = os.getcwd() + '/' + file_name \r\n\t\tis_present = os.path.isfile(directory)\r\n\r\n\t\tif is_present:\r\n\t\t\tsource = open(file_name, 'r')\r\n\t\t\tdata = {\r\n\t   \t\t 'client_secret': CLIENT_SECRET,\r\n\t   \t\t 'async': 0,\r\n   \t \t\t'source': source.read(),\r\n\t   \t \t'lang': \"PYTHON\",\r\n\t   \t \t'time_limit': 5,\r\n    \t\t\t'memory_limit': 262144,\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tr = requests.post(RUN_URL, data=data)\r\n\t\t\tj =  r.json()\r\n\t\t\tpay = j['run_status']\r\n\t\t\tpay = json.dumps(pay)\r\n\t\t\tpay = json.loads(pay)\t\r\n\t\t\toutput = \"OUTPUT: \\n\" + pay['output']\t\r\n\t\t\tslack_client.api_call(\"chat.postMessage\", channel=channel, text=output, as_user=True)\r\n\t\t\r\n\t\telse:\r\n\t\t\toutput = \"File is not present in current working directory!\"\r\n\t\t\tslack_client.api_call(\"chat.postMessage\", channel=channel, text=output, as_user=True)\r\n\t\t\r\n\r\ndef parse_slack_output(slack_read_content):\r\n\tREAD = slack_read_content\r\n\tif READ and len(READ) > 0:\r\n\t\tfor read in READ:\r\n\t\t\tif read and 'text' in read:\r\n\t\t\t\treturn read['text'], read['channel']\r\n\r\n\treturn None, None\r\n\r\n\r\nif __name__ == '__main__':\r\n\t\r\n\tif slack_client.rtm_connect():\r\n\t\tdelay = 1\r\n\t\tprint \"Bot connected successfully\"\r\n\t\twhile True:\r\n\t\t\tmessage, channel = parse_slack_output(slack_client.rtm_read())\r\n\t\t\t\r\n\t\t\tif message and channel:\r\n\t\t\t\thandle_command(message, channel)\t\r\n\t\t\ttime.sleep(delay)\r\n\t\t\t\r\n\telse:\r\n              print \"Error!\"\t\r\n```\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}