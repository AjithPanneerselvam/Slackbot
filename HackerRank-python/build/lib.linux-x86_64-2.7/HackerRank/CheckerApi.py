#!/usr/bin/env python
#coding: utf8 
"""
WordAPI.py
Copyright 2014 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
"""
import sys
import os

from models import *


class CheckerApi(object):

    def __init__(self, apiClient):
      self.apiClient = apiClient

    

    def submission(self, api_key, source, lang, testcases, format, **kwargs):
        """ 

        Args:
            api_key, str: API key (required)

            source, str: The source code for a submission (required)

            lang, int: The language code for the submission. Ex: 5 (Python) (required)

            testcases, str: A JSON list of strings, each being a test case. (required)

            format, str: JSON or XML (required)

            callback_url, str: A callback url, on which the submission response will be posted as a JSON string under `data` parameter. (optional)

            wait, str: true means the response is sent only after the submission is compiled and run. false means the request returns immediately and submission response will posted through the callback URL. (optional)

            

        Returns: Submission
        """

        allParams = ['api_key', 'source', 'lang', 'testcases', 'format', 'callback_url', 'wait']

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method submission" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/checker/submission.json'
        method = 'POST'

        queryParams = {}
        headerParams = {}
        formParams = {}
        bodyParam = None

        if ('api_key' in params):
            formParams['api_key'] = params['api_key']
        if ('source' in params):
            formParams['source'] = params['source']
        if ('lang' in params):
            formParams['lang'] = params['lang']
        if ('testcases' in params):
            formParams['testcases'] = params['testcases']
        if ('format' in params):
            formParams['format'] = params['format']
        if ('callback_url' in params):
            formParams['callback_url'] = params['callback_url']
        if ('wait' in params):
            formParams['wait'] = params['wait']
        if formParams:
            headerParams['Content-type'] = 'application/x-www-form-urlencoded'

        postData = (formParams if formParams else bodyParam)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        if not response:
            return None

        responseObject = self.apiClient.deserialize(response, 'Submission')
        return responseObject
        

        

    def languages(self, **kwargs):
        """ 

        Args:
            

        Returns: LanguageResponse
        """

        allParams = []

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method languages" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/checker/languages.json'
        method = 'GET'

        queryParams = {}
        headerParams = {}
        formParams = {}
        bodyParam = None

        if formParams:
            headerParams['Content-type'] = 'application/x-www-form-urlencoded'

        postData = (formParams if formParams else bodyParam)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        if not response:
            return None

        responseObject = self.apiClient.deserialize(response, 'LanguageResponse')
        return responseObject
        

        

    




